"use strict";(self.webpackChunk_cfinnestad_react_form_builder=self.webpackChunk_cfinnestad_react_form_builder||[]).push([[54],{"./src/components/Items/Subtypes/Text/Test.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,DefaultValue:()=>DefaultValue,Filter:()=>Filter,HelperText:()=>HelperText,MaxLength:()=>MaxLength,MinLength:()=>MinLength,Required:()=>Required,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _index__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/index.ts"),_Render_StoriesSubmit__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Render/StoriesSubmit.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Items/Fields/Text",component:_index__WEBPACK_IMPORTED_MODULE_0__.Hr,tags:["autodocs"],argTypes:{Items:[{type:"Field",subtype:"Text",id:"testItem",name:"text",label:"Text"}]}},Basic={args:{Items:[{type:"Field",subtype:"Text",id:"text1",name:"text1",label:"Text 1"},{type:"Submit",id:"submit1",label:"Submit",submitElementName:"default"}],Options:{submitElements:{default:_Render_StoriesSubmit__WEBPACK_IMPORTED_MODULE_1__.k}}}},DefaultValue={args:{...Basic.args,Items:[{...Basic.args.Items[0],value:"This"},{...Basic.args.Items[1]}]}},HelperText={args:{...Basic.args,Items:[{...Basic.args.Items[0],helperText:"Helper Text"},{...Basic.args.Items[1]}]}},MinLength={args:{...Basic.args,Items:[{...Basic.args.Items[0],minLength:2},{...Basic.args.Items[1]}]}},MaxLength={args:{...Basic.args,Items:[{...Basic.args.Items[0],maxLength:4},{...Basic.args.Items[1]}]}},Required={args:{...Basic.args,Items:[{...Basic.args.Items[0],required:!0},{...Basic.args.Items[1]}]}},Filter={args:{...Basic.args,Items:[{...Basic.args.Items[0],helperText:'Try "show"'},{...Basic.args.Items[0],id:"text2",name:"text2",label:"Text 2",filter:{comparison:"=",fieldId:"text1",value:"show"}},{...Basic.args.Items[1]}]}};Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{\n  args: {\n    Items: [({\n      type: 'Field',\n      subtype: 'Text',\n      id: 'text1',\n      name: 'text1',\n      label: 'Text 1'\n    } as TextSubtype), ({\n      type: 'Submit',\n      id: 'submit1',\n      label: 'Submit',\n      submitElementName: 'default'\n    } as SubmitItem)],\n    Options: {\n      submitElements: {\n        'default': Submit\n      }\n    }\n  }\n}",...Basic.parameters?.docs?.source}}},DefaultValue.parameters={...DefaultValue.parameters,docs:{...DefaultValue.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Basic.args,\n    Items: [({\n      ...Basic.args.Items[0],\n      value: 'This'\n    } as TextSubtype), {\n      ...Basic.args.Items[1]\n    }]\n  }\n}",...DefaultValue.parameters?.docs?.source}}},HelperText.parameters={...HelperText.parameters,docs:{...HelperText.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Basic.args,\n    Items: [({\n      ...Basic.args.Items[0],\n      helperText: 'Helper Text'\n    } as TextSubtype), {\n      ...Basic.args.Items[1]\n    }]\n  }\n}",...HelperText.parameters?.docs?.source}}},MinLength.parameters={...MinLength.parameters,docs:{...MinLength.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Basic.args,\n    Items: [({\n      ...Basic.args.Items[0],\n      minLength: 2\n    } as TextSubtype), {\n      ...Basic.args.Items[1]\n    }]\n  }\n}",...MinLength.parameters?.docs?.source}}},MaxLength.parameters={...MaxLength.parameters,docs:{...MaxLength.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Basic.args,\n    Items: [({\n      ...Basic.args.Items[0],\n      maxLength: 4\n    } as TextSubtype), {\n      ...Basic.args.Items[1]\n    }]\n  }\n}",...MaxLength.parameters?.docs?.source}}},Required.parameters={...Required.parameters,docs:{...Required.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Basic.args,\n    Items: [({\n      ...Basic.args.Items[0],\n      required: true\n    } as TextSubtype), {\n      ...Basic.args.Items[1]\n    }]\n  }\n}",...Required.parameters?.docs?.source}}},Filter.parameters={...Filter.parameters,docs:{...Filter.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Basic.args,\n    Items: [({\n      ...Basic.args.Items[0],\n      helperText: 'Try \"show\"'\n    } as TextSubtype), ({\n      ...Basic.args.Items[0],\n      id: 'text2',\n      name: 'text2',\n      label: 'Text 2',\n      filter: ({\n        comparison: '=',\n        fieldId: 'text1',\n        value: 'show'\n      } as EqFilter)\n    } as TextSubtype), {\n      ...Basic.args.Items[1]\n    }]\n  }\n}",...Filter.parameters?.docs?.source}}};const __namedExportsOrder=["Basic","DefaultValue","HelperText","MinLength","MaxLength","Required","Filter"]},"./src/components/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Hr:()=>Render.ZP});__webpack_require__("./src/components/Builder/Builder.tsx"),__webpack_require__("./src/components/Builder/OnDragEnd.tsx");var Render=__webpack_require__("./src/components/Render/index.ts");__webpack_require__("./src/components/Actions/index.ts"),__webpack_require__("./src/components/Items/index.ts")}}]);